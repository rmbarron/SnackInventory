// Copyright 2020 Robert Barron

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at

//     http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
package snackinventory;

option go_package = "github.com/rmbarron/SnackInventory/src/proto/snackinventory";

// A snack is an individual item in our inventory.
// We store a registry of potential snacks, and keep the count of each snack
// currently in inventory.
// Snacks use `barcode` as their unique ID, as multiple different snacks may
// have the same name &/or brand.
message Snack {
  string barcode = 1;
  string name = 2;
}

message CreateSnackRequest {
  Snack snack = 1;
}

// Status / Success is communicated via gRPC response status.
message CreateSnackResponse {}

message ListSnacksRequest {}

message ListSnacksResponse {
  repeated Snack snacks = 1;
}

// Snacks can only be deleted by barcode, the unique ID for snacks.
message DeleteSnackRequest {
  string barcode = 1;
}

message DeleteSnackResponse {}

service SnackInventory {
  rpc CreateSnack(CreateSnackRequest) returns (CreateSnackResponse) {}

  rpc ListSnacks(ListSnacksRequest) returns (ListSnacksResponse) {}

  rpc DeleteSnack(DeleteSnackRequest) returns (DeleteSnackResponse) {}
}
